services:
    backend:
        container_name: backend
        restart: on-failure
        build: .
        command: python src/zametka/main/web.py
        ports:
            - "8000:80"
        env_file:
            - .env.access_service
            - .env.notes
            - .env
        volumes:
            - ./src/zametka/access_service/infrastructure/persistence/alembic/migrations/versions:/home/app/backend/src/zametka/access_service/infrastructure/persistence/alembic/migrations/versions
            - ./src/zametka/notes/infrastructure/persistence/alembic/migrations/versions:/home/app/backend/src/zametka/notes/infrastructure/persistence/alembic/migrations/versions
        depends_on:
            - access_service_migration
            - notes_migration

    db:
        container_name: persistence
        image: zametkaru/postgres-multi-db
        volumes:
            - pg_data:/var/lib/postgresql/data/
        env_file:
            - .env
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d access_database -U $${POSTGRES_USER}",
                    "CMD-SHELL", "pg_isready -d notes_database -U $${POSTGRES_USER}" ]
            interval: 2s
            timeout: 60s
            retries: 10
            start_period: 5s

    access_service_migration:
        container_name: access_service_migration
        build: .
        restart: on-failure
        env_file:
            - .env.access_service
            - .env
        depends_on:
            db:
                condition: service_healthy
        command: [ "zametka", "access_service", "alembic", "upgrade", "head" ]

    notes_migration:
        container_name: notes_migration
        build: .
        restart: on-failure
        env_file:
            - .env.notes
            - .env
        depends_on:
            db:
                condition: service_healthy
        command: [ "zametka", "notes", "alembic", "upgrade", "head" ]

volumes:
    pg_data: